<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.qzsoft</groupId>
    <artifactId>admin-boot</artifactId>
    <packaging>jar</packaging>
    <version>${qz-jeemis.version}</version>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <qz-jeemis.version>2.2.1</qz-jeemis.version>
        <junit.version>4.12</junit.version>
        <docker.plugin.version>1.1.1</docker.plugin.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>com.qzsoft</groupId>
            <artifactId>qz-jeemis-platform</artifactId>
            <version>${qz-jeemis.version}</version>
        </dependency>
         <dependency>
            <groupId>com.qzsoft</groupId>
            <artifactId>qz-module-business</artifactId>
            <version>${qz-jeemis.version}</version>
        </dependency>

        <!--groovy动态脚本支持-->
        <!--  <dependency>
            <groupId>com.qzsoft</groupId>
            <artifactId>qz-jeemis-groovy</artifactId>
            <version>${qz-jeemis.version}</version>
        </dependency>-->

        <!--本地文件 目前只支持本地和MongoDB文件 后续增加MINIO-->
        <dependency>
            <groupId>com.qzsoft</groupId>
            <artifactId>qz-jeemis-file-local</artifactId>
            <version>${qz-jeemis.version}</version>
        </dependency>
        <!--
        MongoDB文件
        <dependency>
           <groupId>com.qzsoft</groupId>
           <artifactId>qz-jeemis-file-gridfs</artifactId>
           <version>${qz-jeemis.version}</version>
       </dependency>
       -->

        <!--任务管理-->
        <dependency>
            <groupId>com.qzsoft</groupId>
            <artifactId>qz-jeemis-task</artifactId>
            <version>${qz-jeemis.version}</version>
        </dependency>

        <!--流程引擎-->
        <dependency>
            <groupId>com.qzsoft</groupId>
            <artifactId>qz-jeemis-activiti</artifactId>
            <version>${qz-jeemis.version}</version>
        </dependency>

        <!--websocket通信-->
        <dependency>
            <groupId>com.qzsoft</groupId>
            <artifactId>qz-jeemis-im-simple</artifactId>
            <version>${qz-jeemis.version}</version>
        </dependency>

        <!--简单消息队列,通过redis实现发布订阅-->
        <dependency>
            <groupId>com.qzsoft</groupId>
            <artifactId>qz-jeemis-redis-pubsub</artifactId>
            <version>${qz-jeemis.version}</version>
        </dependency>

         <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>2.2.6.RELEASE</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.vaadin.external.google</groupId>
                    <artifactId>android-json</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>spring-boot-autoconfigure</artifactId>
                    <groupId>org.springframework.boot</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--新增的业务模块-->
         <dependency>
            <groupId>com.qzsoft</groupId>
            <artifactId>qz-module-system</artifactId>
            <version>${qz-jeemis.version}</version>
        </dependency>
       <!-- <dependency>
            <groupId>com.qzsoft</groupId>
            <artifactId>qz-module-business</artifactId>
            <version>${qz-jeemis.version}</version>
        </dependency>-->
    </dependencies>
    <repositories>
        <repository>
            <id>rdc-releases</id>
            <url>https://repo.rdc.aliyun.com/repository/79844-release-DuCvlm/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
        <repository>
            <id>rdc-snapshots</id>
            <url>https://repo.rdc.aliyun.com/repository/79844-snapshot-CIuy2s/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.plugin.version}</version>
                <configuration>
                    <imageName>${project.artifactId}</imageName>
                    <dockerDirectory>${project.basedir}/</dockerDirectory>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>